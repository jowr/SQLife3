language: cpp

branches:
  except:
    - gh-pages

matrix:
  include:
    ## Start with the default images
    #- os: osx
    #- os: linux

    # Add OSX with default Clang
    - os: osx
      osx_image: xcode8
      env:
         - CMAKE_BUILD_TYPE=Release
    - os: osx
      osx_image: xcode9
      env:
         - CMAKE_BUILD_TYPE=Release
    - os: osx
      osx_image: xcode10
      env:
         - CMAKE_BUILD_TYPE=Release

    # Add Linux with custom GCC > 4.x
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
          packages:
            - g++-5
            - cmake-data
            - cmake
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
         - CMAKE_BUILD_TYPE=Release

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
          packages:
            - g++-6
            - cmake-data
            - cmake
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - CMAKE_BUILD_TYPE=Release

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
          packages:
            - g++-7
            - cmake-data
            - cmake
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - CMAKE_BUILD_TYPE=Release

before_install:
  - eval "${MATRIX_EVAL}"

script:
  - mkdir build && cd build
  - echo "-- The CMake version is $(cmake --version)"
  - cmake .. -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE
  - cmake --build . --target sqlite3
  - cmake --build . --target SQLiteCpp_tests
